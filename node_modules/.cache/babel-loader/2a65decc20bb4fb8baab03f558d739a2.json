{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jin\\\\Desktop\\\\\\uD56D\\uD57499\\\\Chapter 3 \\uC8FC\\uD2B9\\uAE30 \\uC785\\uBB38 _ React\\\\\\uB9AC\\uC561\\uD2B8\\uC7A5\\uC778\\\\blog\\\\src\\\\components\\\\todo\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./style.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n// 1. 상세보기 버튼을 만들어야함.\n// 2. title의 상단에 위치해야하며, title은 눌렀을때 관련 정보가 나와야하고\n//  ID값이 부여됨.\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(_ref) {\n  _s();\n  let {\n    todo,\n    onDeleteHanlder,\n    onEditHandler\n  } = _ref;\n  console.log({\n    todo\n  });\n  const navigate = useNavigate();\n\n  // const onClickP = () => {\n  //   document.location.href(\"Detail\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => {\n          navigate(`/Detail/${todo.id}`);\n        },\n        children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"todo-title\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-set\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-delete-button button\",\n        onClick: () => onDeleteHanlder(todo.id)\n        // onClick={() => {deleteTodo(todo.id)}\n        ,\n        children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-complete-button button\",\n        onClick: () => onEditHandler(todo.id)\n        // onClick={() => {updateTodo(todo.id)}}\n        ,\n        children: todo.isDone ? \"취소\" : \"완료\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useNavigate","Todo","todo","onDeleteHanlder","onEditHandler","console","log","navigate","id","title","body","isDone"],"sources":["C:/Users/Jin/Desktop/항해99/Chapter 3 주특기 입문 _ React/리액트장인/blog/src/components/todo/Todo.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// 1. 상세보기 버튼을 만들어야함.\r\n// 2. title의 상단에 위치해야하며, title은 눌렀을때 관련 정보가 나와야하고\r\n//  ID값이 부여됨.\r\n//\r\n\r\nfunction Todo({ todo, onDeleteHanlder, onEditHandler }) {\r\n  console.log({ todo });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const onClickP = () => {\r\n  //   document.location.href(\"Detail\");\r\n  // };\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <div>\r\n        <p\r\n          onClick={() => {\r\n            navigate(`/Detail/${todo.id}`);\r\n          }}\r\n        >\r\n          상세보기\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h2 className=\"todo-title\">{todo.title}</h2>\r\n        <div>{todo.body}</div>\r\n      </div>\r\n      <div className=\"button-set\">\r\n        <button\r\n          className=\"todo-delete-button button\"\r\n          onClick={() => onDeleteHanlder(todo.id)}\r\n          // onClick={() => {deleteTodo(todo.id)}\r\n        >\r\n          삭제하기\r\n        </button>\r\n        <button\r\n          className=\"todo-complete-button button\"\r\n          onClick={() => onEditHandler(todo.id)}\r\n          // onClick={() => {updateTodo(todo.id)}}\r\n        >\r\n          {todo.isDone ? \"취소\" : \"완료\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AAAA;AAEA,SAASC,IAAI,OAA2C;EAAA;EAAA,IAA1C;IAAEC,IAAI;IAAEC,eAAe;IAAEC;EAAc,CAAC;EACpDC,OAAO,CAACC,GAAG,CAAC;IAAEJ;EAAK,CAAC,CAAC;EAErB,MAAMK,QAAQ,GAAGP,WAAW,EAAE;;EAE9B;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,uBACE;QACE,OAAO,EAAE,MAAM;UACbO,QAAQ,CAAE,WAAUL,IAAI,CAACM,EAAG,EAAC,CAAC;QAChC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAGA;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAA,wBACE;QAAI,SAAS,EAAC,YAAY;QAAA,UAAEN,IAAI,CAACO;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5C;QAAA,UAAMP,IAAI,CAACQ;MAAI;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB,eACN;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QACE,SAAS,EAAC,2BAA2B;QACrC,OAAO,EAAE,MAAMP,eAAe,CAACD,IAAI,CAACM,EAAE;QACtC;QAAA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGO,eACT;QACE,SAAS,EAAC,6BAA6B;QACvC,OAAO,EAAE,MAAMJ,aAAa,CAACF,IAAI,CAACM,EAAE;QACpC;QAAA;QAAA,UAECN,IAAI,CAACS,MAAM,GAAG,IAAI,GAAG;MAAI;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1CQV,IAAI;EAAA,QAGMD,WAAW;AAAA;AAAA,KAHrBC,IAAI;AA4Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}